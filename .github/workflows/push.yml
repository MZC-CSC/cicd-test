name: golang-pipeline
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags')
    steps:
      - uses: actions/checkout@v2
      - name: Run Unit Tests
        run: go test

  deploy:
    runs-on: ubuntu-latest
    needs: test
    #if: startsWith(github.ref, 'refs/tags')
    if: startsWith(github.ref, 'refs/heads/main')
    steps:
      - name: Extract Version
        id: version_step
        run: echo "##[set-output name=version;]$(echo '${{ github.event.head_commit.message }}' | egrep -o '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
      
        #run: |
        #  echo "##[set-output name=version;]VERSION=${GITHUB_REF#$"refs/tags/v"}"
        #  echo "##[set-output name=version_tag;]$GITHUB_REPOSITORY:${GITHUB_REF#$"refs/tags/v"}"
        #  echo "##[set-output name=latest_tag;]$GITHUB_REPOSITORY:latest"
      - name: Print Version
        run: |
          echo ${{steps.version_step.outputs.version_tag}}
          echo ${{steps.version_step.outputs.latest_tag}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME_YHNOH }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN_YHNOH }}

      - name: PrepareReg Names
        id: read-docker-image-identifiers
        run: |
          echo VERSION_TAG=$(echo ${{ steps.version_step.outputs.version_tag }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
          echo LASTEST_TAG=$(echo ${{ steps.version_step.outputs.latest_tag  }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ steps.extract_version_name.outputs.version }}
          build-args: |
            ${{steps.version_step.outputs.version}}
          
          #tags: ${{ steps.meta.outputs.tags }}
          
          #tags: |
          #  ${{steps.version_step.outputs.version_tag}}
          #  ${{steps.version_step.outputs.latest_tag}}
          #build-args: |
          #  ${{steps.version_step.outputs.version}}
            
          #tags: |
          #  ${{env.VERSION_TAG}}
          #  ${{env.LASTEST_TAG}}
          #build-args: |
          #  ${{steps.version_step.outputs.version}}
